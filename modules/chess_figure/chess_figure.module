<?php
module_load_include('inc', 'chess_figure', 'includes/chess_figure.form');
/**
 * Implements hook_entity_info().
 */
function chess_figure_entity_info(){
  $info['chess_figure'] = array(
    'label' => t('Chess Figure'),
    'plural label' => t('Chess Figure'),
    'entity class' => 'ChessFigure',
    'controller class' => 'ChessFigureController',
    'views controller class' => 'ChessFigureViewsController',
    'metadata controller' => 'ChessFigureMetadataController',
    'base table' => 'chess_figure',
    'fieldable' => FALSE,
    'admin ui' => array(
      'path' => 'admin/content/chess-figures',
      'file' => 'includes/ChessFigureUIControllerClass.inc',
      'controller class' => 'ChessFigureUIController',
      'menu wildcard' => '%figure',
    ),
    'entity keys' => array(
      'id' => 'fid',
      'bundle' => 'type',
    ),
    'bundles' => array(),
    'bundle keys' => array(
      'bundle' => 'type',
    ),
    'load hook' => 'chess_figure_load',
    'creation callback' => 'chess_figure_create',
    'deletion callback' => 'chess_figure_delete',
    'save callback' => 'chess_figure_save',
    'uri callback' => 'chess_figure_uri',
    'access callback' => 'chess_figure_access',
    'module' => 'chess_figure',
    'view modes' => array(
      'figure' => array(
        'label' => t('Description of figure'),
        'custom setting' => TRUE,
      ),
      'on_board' => array(
        'label' => t('Figures on board'),
        'custom setting' => TRUE,
      ),
    ),
  );

  $chess_figure = db_select('chess_figure_type', 'c')
    ->fields('c')
    ->execute()
    ->fetchAllAssoc('type');

  foreach ($chess_figure as $type => $inf) {
    $info['chess_figure']['bundles'][$type] = array(
      'label' => $inf -> label,
      'admin' => array(
        'path' => 'admin/structure/chess-figure-types/manage/%chess_figure_type',
        'real path' => 'admin/structure/chess-figure-types/manage/' . $type,
        'bundle argument' => 4,
        'access argument' => array('administer chess figure'),
      ),
    );
  }

  $info['chess_figure_type'] = array(
    'label' => t('Chess Figure Type'),
    'controller class' => 'ChessFigureTypeController',
    'entity class' => 'ChessFigureType',
    'base table' => 'chess_figure_type',
    'uri callback' => 'chess_figure_type_uri',
    'fieldable' => FALSE,
    'bundle of' => 'chess_figure',
    'exportable' => FALSE,
    'entity keys' => array(
      'id' => 'tid',
      'name' => 'type',
      'label' => 'label',
    ),
    'access callback' => 'chess_figure_access',
    'module' => 'chess_figure',
    'admin ui' => array(
      'path' => 'admin/structure/chess-figure-types',
      'controller class' => 'ChessFigureTypeUIController',
    ),
  );
   return $info;
}

/**
 * Implements hook_entity_info_alter().
 */


/**
 * Implements hook_permission().
 */
function chess_figure_permission() {
  $permission = array(
    'administer chess' => array(
      'title' => t('Administer all chess figure and type'),
      'description' => t('Create, changed and delete all chess figures and types.'),
      'restrict access' =>TRUE,
    ),
    'own chess' => array(
      'title' => t('Administer only own chess figure'),
      'description' => t('Create, changed and delete only own chess figures and types.'),
      'restrict access' => TRUE,
    ),
  );
  return $permission;
}

/**
 * @param array $values
 * @return mixed
 */
function chess_figure_create($values){
  return entity_get_controller('chess_figure')->create($values);
}

/**
 * @param $figures
 */
function chess_figure_crete_multiple($figures){
  foreach ($figures as $figure => $values){
    chess_figure_create($values);
  }
}

function chess_figure_load($chess_figure = NULL, $condition = array(), $reset = FALSE){
  $ids = is_array($chess_figure) ? $chess_figure : array($chess_figure);
  return entity_load('chess_figure',$ids,$condition,$reset);
}


function chess_figure_save ($chess_figure){
  $figure = is_object($chess_figure) ? $chess_figure : chess_figure_load($chess_figure);
  return $figure ->save();
}

function chess_figure_save_multiple ($figures){
  foreach ($figures as $figure){
    chess_figure_save($figure);
  }
}

function chess_figure_delete ($chess_figure){
  $figure = is_object($chess_figure) ? $chess_figure : chess_figure_load($chess_figure);
  $figure -> delete;
}

function chess_figure_delete_multiple ($chess_figures){
  foreach ($chess_figures as $chess_figure){
    chess_figure_delete($chess_figure);
  }
}


function chess_figure_access ($op='create', $chess_figure = NULL, $account = NULL){
  global $user;

  if (NULL == $account){
    $account = $user;
  }

  $id = $account->uid;

  if (user_access('administer chess',$account)){
    return TRUE;
  }

  if (user_access('own chess',$account) && $id == $chess_figure -> uid){
    return TRUE;
  }

  if ($op == 'create' && $id!=0){
    return TRUE;
  }

  return TRUE;
}

function chess_figure_uri ($chess_figure){
  $id = is_object($chess_figure) ? $chess_figure->fid : $chess_figure;
  return array(
    'path' => 'chess-figure/'.$id,
  );
}

function chess_figure_type_uri ($type){
  $type_name = is_object($type) ? $type -> type : $type;
  return array(
    'path' => 'chess-figure-type/' .$type_name,
  );
}

function chess_figure_get_types ($type = NULL){
  $types = entity_load_multiple_by_name('chess_figure_type', isset($type) ? array($type) : FALSE);
  return isset($type) ? reset($types) : $types;
}

function chess_figure_set_breadcrumb(){
  $breadcrumb = array(
    l(t('Home'), '<front>'),
    l(t('Administration'), 'admin'),
    l(t('Content'), 'admin/content'),
    l(t('Chess-figures'), 'admin/content/chess-figures'),
  );

  drupal_set_breadcrumb($breadcrumb);
}



function chess_figure_theme() {
  return array(
    'chess_figure_add_list' => array(
      'variables' => array('content' => array()),
      'file' => 'chess_figure.module',
    ),

  );
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function chess_figure_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  if ($root_path == 'admin/content/chess-figures') {
    $item = menu_get_item('admin/content/chess-figures/add');
    if ($item['access']){
      $data['actions']['output'][] = array(
        '#theme' => 'menu_local_action',
        '#link' => $item,
      );
    }
  }
}

/**
 * Implements hook_admin_paths().
 */
function chess_figure_admin_paths() {
  $path = array(
    'chess-figure/*/edit' => TRUE,
    'chess-figure/*/delete' => TRUE,
    'chess-figure/add' =>TRUE,
    );

}

function chess_figure_views_api(){
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'chess_figure') . '/views',
  );
}
